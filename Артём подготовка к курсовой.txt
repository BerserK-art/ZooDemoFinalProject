Очень здорово, что ты сделал такой огромный объём работы и написал столько кода, код написан достаточно хорошо и грамотно, практически соблюдены SOLID принципы и использованы многие паттерны проектирования, мне очень понравилось использование using и твоя идея парсеров просто гениальна, однако у меня к тебе есть несколько замечаний:
1. Там, где можно использовать тернарные операторы, лучше использовать тернарные операторы
2. В функциях, где только единственный оператор return, лучше заменить на стрелочные функции
3. Неймспейс должен совпадать с путём к папке
4. В командах лучше выразить общность через наследование и ввести базовые абстрактные классы CommandBase, принимающий только зоопарк и имеющий его в качестве protected поля и protected конструктор, а также  NotifyCommandBase - наследника от CommandBase, содержищий protected поля - сервисы, необходимые для работы с пользователем, а так же protected конструктор
5. У конкретных фабрик лучше выделить тоже иерархию и выделить общность через наследование, чтобы не дублировать присваивание сервисов для работы с пользователем, аналогично пункту 4
6. В конкретных фабриках нарушен принцип единства ответственности для реализации логики считывания данных конкретного животного лучше использовать либо какой-то другой сервис, либо парсер. У фабрики должна быть единственная ответственность - создание конкретного объекта класса
7. У AnimalFabric нарушен принцип единства ответственности, так как она ещё и печатает и меню, что очевидно ответственность класса меню или подобного
8. Логику PrintMenu из Main лучше перенести в класс Menu, тем самым сделав возможность динамически менять меню, правктически не меняя код
9. Коллекции лучше заполнять в инициализаторах, не вызывая огромное множество методов Add
10. Приватные поля, изменяемые только в конструкторах, лучше всего делать readonly
11. Всё, что касается работы с консолью, лучше всего перенести в проект работы с консолью
12. В парсерах лучше использовать StringBuilder вместо string
13. Использование File очень несовременно и лучше всего использовать Streamы или ешё лучше и современнее IFileInfo 
14. Название файлов для чтения и записи лучше спрашивать у пользователя
15. Сделать возможность добавления, удаления и редактирования животных в WPF, а так же считывания из файла и записи в файл
Очень надеюсь, что ты сможешь соблюсти все SOLID принципы, особенно самое главное принцип единства ответственности, а так же масимально избежать дублирования кода, ну и, конечно бы хотелось, чтобы ты поработал бы над красотой кода и тогда твоя работа станет просто прекрасной. 
